// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.4.0.0
//      Runtime Version:4.0.30319.225
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace Parkcalc.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ParkingFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Parkcalc.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Parking", "In order to decide which lot to park in\nAs a customer\nI want to be told how much " +
                    "my parking will cost", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Park in the economy lot for an hour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Parking")]
        public virtual void ParkInTheEconomyLotForAnHour()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Park in the economy lot for an hour", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("I park in Economy Parking");
#line 8
 testRunner.And("I enter at 1/1/2010 10:00 AM");
#line 9
 testRunner.And("I exit at 1/1/2010 11:00 AM");
#line 10
 testRunner.Then("The parking should cost $ 4.00");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Park in the economy lot for two hours")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Parking")]
        public virtual void ParkInTheEconomyLotForTwoHours()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Park in the economy lot for two hours", ((string[])(null)));
#line 12
 this.ScenarioSetup(scenarioInfo);
#line 13
 testRunner.Given("I park in Economy Parking");
#line 14
 testRunner.And("I enter at 1/1/2010 9:00 AM");
#line 15
 testRunner.And("I exit at 1/1/2010 11:00 AM");
#line 16
 testRunner.Then("The parking should cost $ 8.00");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Park in the economy lot for three hours")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Parking")]
        public virtual void ParkInTheEconomyLotForThreeHours()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Park in the economy lot for three hours", ((string[])(null)));
#line 18
 this.ScenarioSetup(scenarioInfo);
#line 19
 testRunner.Given("I park in Economy Parking");
#line 20
 testRunner.And("I enter at 1/1/2010 8:00 AM");
#line 21
 testRunner.And("I exit at 1/1/2010 11:00 AM");
#line 22
 testRunner.Then("The parking should cost $ 12.00");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Park in the Short term lot for one hours")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Parking")]
        public virtual void ParkInTheShortTermLotForOneHours()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Park in the Short term lot for one hours", ((string[])(null)));
#line 25
    this.ScenarioSetup(scenarioInfo);
#line 26
 testRunner.Given("I park in Short-Term Parking");
#line 27
 testRunner.And("I enter at 1/1/2010 10:00 AM");
#line 28
 testRunner.And("I exit at 1/1/2010 11:00 AM");
#line 29
 testRunner.Then("The parking should cost $ 2.00");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Park in the Short term lot for two hours")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Parking")]
        public virtual void ParkInTheShortTermLotForTwoHours()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Park in the Short term lot for two hours", ((string[])(null)));
#line 31
 this.ScenarioSetup(scenarioInfo);
#line 32
 testRunner.Given("I park in Short-Term Parking");
#line 33
 testRunner.And("I enter at 1/1/2010 9:00 AM");
#line 34
 testRunner.And("I exit at 1/1/2010 11:00 AM");
#line 35
 testRunner.Then("The parking should cost $ 4.00");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Park in the Short term lot for three hours")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Parking")]
        public virtual void ParkInTheShortTermLotForThreeHours()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Park in the Short term lot for three hours", ((string[])(null)));
#line 38
 this.ScenarioSetup(scenarioInfo);
#line 39
 testRunner.Given("I park in Short-Term Parking");
#line 40
 testRunner.And("I enter at 1/1/2010 8:00 AM");
#line 41
 testRunner.And("I exit at 1/1/2010 11:00 AM");
#line 42
 testRunner.Then("The parking should cost $ 4.00");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Park in the Short term lot for four hours")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Parking")]
        public virtual void ParkInTheShortTermLotForFourHours()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Park in the Short term lot for four hours", ((string[])(null)));
#line 45
 this.ScenarioSetup(scenarioInfo);
#line 46
 testRunner.Given("I park in Short-Term Parking");
#line 47
 testRunner.And("I enter at 1/1/2010 7:00 AM");
#line 48
 testRunner.And("I exit at 1/1/2010 11:00 AM");
#line 49
 testRunner.Then("The parking should cost $ 4.00");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Park in the Short term lot for five hours")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Parking")]
        public virtual void ParkInTheShortTermLotForFiveHours()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Park in the Short term lot for five hours", ((string[])(null)));
#line 52
 this.ScenarioSetup(scenarioInfo);
#line 53
 testRunner.Given("I park in Short-Term Parking");
#line 54
 testRunner.And("I enter at 1/1/2010 6:00 AM");
#line 55
 testRunner.And("I exit at 1/1/2010 11:00 AM");
#line 56
 testRunner.Then("The parking should cost $ 4.00");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Park in the Short term lot for aaa hours")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Parking")]
        public virtual void ParkInTheShortTermLotForAaaHours()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Park in the Short term lot for aaa hours", ((string[])(null)));
#line 59
 this.ScenarioSetup(scenarioInfo);
#line 60
 testRunner.Given("I park in Short-Term Parking");
#line 61
 testRunner.And("I enter at 1/1/2010 6:00 AM");
#line 62
 testRunner.And("I exit at 1/1/2010 11:00 AM");
#line 63
 testRunner.Then("The parking should cost $ 10.00");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
